<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郭颐的博客</title>
  
  <subtitle>郭颐的博客</subtitle>
  <link href="https://gy5461.github.io/atom.xml" rel="self"/>
  
  <link href="https://gy5461.github.io/"/>
  <updated>2023-07-04T15:43:51.600Z</updated>
  <id>https://gy5461.github.io/</id>
  
  <author>
    <name>郭颐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>OpenGL环境配置</title>
    <link href="https://gy5461.github.io/2023/07/04/OpenGL%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://gy5461.github.io/2023/07/04/OpenGL%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2023-07-04T15:26:02.070Z</published>
    <updated>2023-07-04T15:43:51.600Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用Glfw + Glad的方案，帮助你在本地配置OpenGL运行环境</p></blockquote><h2 id="Glfw"><a href="#Glfw" class="headerlink" title="Glfw"></a>Glfw</h2><p><a href="https://www.glfw.org/">https://www.glfw.org/</a></p><p>下载Glfw 3.3.8，选择32位，因为如果选择64位，将来编写的程序只能在64位机器上跑<br><img src="/images/image.png" alt="Alt text"></p><p>将include和lib-vc2019文件夹（方便起见，重命名为lib）拷贝到OpenGLlab项目（VS2019新建C++空白项目）工程目录下<br><img src="/images/image-1.png" alt="Alt text"></p><h2 id="Glad"><a href="#Glad" class="headerlink" title="Glad"></a>Glad</h2><p><a href="https://glad.dav1d.de/">https://glad.dav1d.de/</a><br><img src="/images/image-2.png" alt="Alt text"><br>选好红圈位置后点击生成<br><img src="/images/image-3.png" alt="Alt text"><br><img src="/images/image-4.png" alt="Alt text"><br>将include中的内容拷贝到OpenGLLab项目的include文件夹下，src目录的glad.c拷贝到项目源码目录下<br><img src="/images/image-5.png" alt="Alt text"><br><img src="/images/image-6.png" alt="Alt text"><br>将glad.c包含到项目中，下图是已在项目中的状态<br><img src="/images/image-7.png" alt="Alt text"></p><h2 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h2><p><img src="/images/image-8.png" alt="Alt text"><br><img src="/images/image-9.png" alt="Alt text"></p><h2 id="测试是否配置成功"><a href="#测试是否配置成功" class="headerlink" title="测试是否配置成功"></a>测试是否配置成功</h2><p>然后就可以愉快的使用OpenGL进行编程了，示例代码：<br>绘制四边形</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;GLFW/glfw3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法一</span></span><br><span class="line"><span class="comment">// 渲染之前VAO/VBO的绑定生成</span></span><br><span class="line"><span class="comment">// 顶点数据</span></span><br><span class="line"><span class="type">const</span> <span class="type">float</span> vertices[] = &#123;</span><br><span class="line"><span class="comment">// 第一个三角形</span></span><br><span class="line"><span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 右上</span></span><br><span class="line"><span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 右下</span></span><br><span class="line"><span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下</span></span><br><span class="line"><span class="comment">// 第二个三角形</span></span><br><span class="line"><span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 左下</span></span><br><span class="line"><span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 右上</span></span><br><span class="line"><span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="comment">// 左上</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> screen_width = <span class="number">1280</span>;</span><br><span class="line"><span class="type">int</span> screen_height = <span class="number">720</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GLFWwindow* window;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Initialize the library */</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">glfwInit</span>())</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">glfwWindowHint</span>(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">glfwWindowHint</span>(GLFW_OPENGL_ANY_PROFILE, GLFW_OPENGL_CORE_PROFILE);<span class="comment">// 使用核心模式，无需向后兼容</span></span><br><span class="line"><span class="built_in">glfwWindowHint</span>(GLFW_RELEASE, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Create a windowed mode window and its OpenGL context */</span></span><br><span class="line">window = <span class="built_in">glfwCreateWindow</span>(screen_width, screen_height, <span class="string">&quot;Quadrilateral&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (!window)</span><br><span class="line">&#123;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;Failed to Create OpenGL Context&quot;</span> &lt;&lt; std::endl;</span><br><span class="line"><span class="built_in">glfwTerminate</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Make the window&#x27;s context current */</span></span><br><span class="line"><span class="built_in">glfwMakeContextCurrent</span>(window);<span class="comment">// 将窗口的上下文设置为当前线程的主上下文</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化GLAD，加载OpenGL函数指针地址的函数</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">gladLoadGLLoader</span>((GLADloadproc)glfwGetProcAddress))</span><br><span class="line">&#123;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;Failed to initialize GLAD&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定当前视口尺寸（前两个参数为左下角位置，后两个参数为渲染窗口的宽和高）</span></span><br><span class="line"><span class="built_in">glViewport</span>(<span class="number">0</span>, <span class="number">0</span>, screen_width, screen_height);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成四边形的VAO、VBO</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> VBO, VAO;</span><br><span class="line"><span class="built_in">glGenVertexArrays</span>(<span class="number">1</span>, &amp;VAO);</span><br><span class="line"><span class="built_in">glGenBuffers</span>(<span class="number">1</span>, &amp;VBO);</span><br><span class="line"><span class="comment">// 绑定VAO</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="comment">// 绑定VBO并传入顶点数据</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, VBO);</span><br><span class="line"><span class="built_in">glBufferData</span>(GL_ARRAY_BUFFER, <span class="built_in">sizeof</span>(vertices), vertices, GL_STATIC_DRAW);</span><br><span class="line"><span class="comment">// 设置顶点属性指针</span></span><br><span class="line"><span class="built_in">glVertexAttribPointer</span>(<span class="number">0</span>, <span class="number">3</span>, GL_FLOAT, GL_FALSE, <span class="number">3</span> * <span class="built_in">sizeof</span>(<span class="type">float</span>), (<span class="type">void</span>*)<span class="number">0</span>);</span><br><span class="line"><span class="built_in">glEnableVertexAttribArray</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 解绑VBO</span></span><br><span class="line"><span class="built_in">glBindBuffer</span>(GL_ARRAY_BUFFER, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 解绑VAO</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 顶点着色器和片元着色器源码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* vertex_shader_source =</span><br><span class="line"><span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line"><span class="string">&quot;layout (location=0) in vec3 aPos;\n&quot;</span></span><br><span class="line"><span class="string">&quot;void main()\n&quot;</span></span><br><span class="line"><span class="string">&quot;&#123;\n&quot;</span></span><br><span class="line"><span class="string">&quot;gl_Position=vec4(aPos, 1.0);\n&quot;</span></span><br><span class="line"><span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* fragment_shader_source =</span><br><span class="line"><span class="string">&quot;#version 330 core\n&quot;</span></span><br><span class="line"><span class="string">&quot;out vec4 FragColor;\n&quot;</span></span><br><span class="line"><span class="string">&quot;void main()\n&quot;</span></span><br><span class="line"><span class="string">&quot;&#123;\n&quot;</span></span><br><span class="line"><span class="string">&quot;FragColor=vec4(1.0f,0.5f,0.2f,1.0f);\n&quot;</span><span class="comment">// 三角形的颜色</span></span><br><span class="line"><span class="string">&quot;&#125;\n\0&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成并编译着色器</span></span><br><span class="line"><span class="comment">// 顶点着色器</span></span><br><span class="line"><span class="type">int</span> vertex_shader = <span class="built_in">glCreateShader</span>(GL_VERTEX_SHADER);</span><br><span class="line"><span class="built_in">glShaderSource</span>(vertex_shader, <span class="number">1</span>, &amp;vertex_shader_source, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">glCompileShader</span>(vertex_shader);</span><br><span class="line"><span class="type">int</span> success;</span><br><span class="line"><span class="type">char</span> info_log[<span class="number">512</span>];</span><br><span class="line"><span class="comment">// 检查着色器是否编译成功，如果编译失败，打印错误信息</span></span><br><span class="line"><span class="built_in">glGetShaderiv</span>(vertex_shader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line"><span class="keyword">if</span> (!success)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">glGetShaderInfoLog</span>(vertex_shader, <span class="number">512</span>, <span class="literal">nullptr</span>, info_log);</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;ERROR::SHADER::VERTEX::COMPILATION_FAILED\n&quot;</span> &lt;&lt; info_log &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 片元着色器</span></span><br><span class="line"><span class="type">int</span> fragment_shader = <span class="built_in">glCreateShader</span>(GL_FRAGMENT_SHADER);</span><br><span class="line"><span class="built_in">glShaderSource</span>(fragment_shader, <span class="number">1</span>, &amp;fragment_shader_source, <span class="literal">nullptr</span>);</span><br><span class="line"><span class="built_in">glCompileShader</span>(fragment_shader);</span><br><span class="line"><span class="comment">// 检查着色器是否成功编译，如果编译失败，打印错误信息</span></span><br><span class="line"><span class="built_in">glGetShaderiv</span>(fragment_shader, GL_COMPILE_STATUS, &amp;success);</span><br><span class="line"><span class="keyword">if</span> (!success)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">glGetShaderInfoLog</span>(fragment_shader, <span class="number">512</span>, <span class="literal">nullptr</span>, info_log);</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\n&quot;</span> &lt;&lt; info_log &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链接顶点和片元着色器至一个着色器程序</span></span><br><span class="line"><span class="type">int</span> shader_program = <span class="built_in">glCreateProgram</span>();</span><br><span class="line"><span class="built_in">glAttachShader</span>(shader_program, vertex_shader);</span><br><span class="line"><span class="built_in">glAttachShader</span>(shader_program, fragment_shader);</span><br><span class="line"><span class="built_in">glLinkProgram</span>(shader_program);</span><br><span class="line"><span class="comment">// 检查着色器是否链接成功，如果链接失败，打印错误信息</span></span><br><span class="line"><span class="built_in">glGetProgramiv</span>(shader_program, GL_LINK_STATUS, &amp;success);</span><br><span class="line"><span class="keyword">if</span> (!success)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">glGetProgramInfoLog</span>(shader_program, <span class="number">512</span>, <span class="literal">nullptr</span>, info_log);</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;ERROR::SHADER::PROGRAM::LINKING_FAILED\n&quot;</span> &lt;&lt; info_log &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">glDeleteShader</span>(vertex_shader);</span><br><span class="line"><span class="built_in">glDeleteShader</span>(fragment_shader);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 线框模式</span></span><br><span class="line"><span class="comment">//glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Loop until the user closes the window */</span></span><br><span class="line"><span class="keyword">while</span> (!<span class="built_in">glfwWindowShouldClose</span>(window))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/* Render here */</span></span><br><span class="line"><span class="built_in">glClearColor</span>(<span class="number">0.0f</span>, <span class="number">0.34f</span>, <span class="number">0.57f</span>, <span class="number">1.0f</span>);<span class="comment">// 背景色</span></span><br><span class="line"><span class="built_in">glClear</span>(GL_COLOR_BUFFER_BIT);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用着色器程序</span></span><br><span class="line"><span class="built_in">glUseProgram</span>(shader_program);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制三角形</span></span><br><span class="line"><span class="built_in">glBindVertexArray</span>(VAO);</span><br><span class="line"><span class="built_in">glDrawArrays</span>(GL_TRIANGLES, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"><span class="built_in">glBindVertexArray</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Swap front and back buffers */</span></span><br><span class="line"><span class="built_in">glfwSwapBuffers</span>(window);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Poll for and process events */</span></span><br><span class="line"><span class="built_in">glfwPollEvents</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">glDeleteVertexArrays</span>(<span class="number">1</span>, &amp;VAO);</span><br><span class="line"><span class="built_in">glDeleteBuffers</span>(<span class="number">1</span>, &amp;VBO);</span><br><span class="line"></span><br><span class="line"><span class="built_in">glfwTerminate</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果没有问题你将会看到一个四边形<br><img src="/images/image-10.png" alt="Alt text"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;使用Glfw + Glad的方案，帮助你在本地配置OpenGL运行环境&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Glfw&quot;&gt;&lt;a href=&quot;#Glfw&quot; class=&quot;headerlink&quot; title=&quot;Glfw&quot;&gt;&lt;/a&gt;Glfw</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>One Sister have I in our house</title>
    <link href="https://gy5461.github.io/2022/05/08/OneSister/"/>
    <id>https://gy5461.github.io/2022/05/08/OneSister/</id>
    <published>2022-05-08T09:22:12.980Z</published>
    <updated>2022-05-08T09:27:36.177Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一首美丽的情诗，出自艾米莉·狄金森，致苏</p></blockquote><h2 id="One-Sister-have-I-in-our-house"><a href="#One-Sister-have-I-in-our-house" class="headerlink" title="One Sister have I in our house"></a>One Sister have I in our house</h2><p>One Sister have I in our house,</p><p>And one, a hedge away.</p><p>There’s only one recorded,</p><p>But both belong to me.</p><p>One came the road that I came -</p><p>And wore my last year’s gown –</p><p>The other, as a bird her nest,</p><p>Builded our hearts among.</p><p>She did not sing as we did –</p><p>It was a different tune –</p><p>Herself to her a music</p><p>As Bumble bee of June.</p><p>Today is far from Childhood –</p><p>But up and down the hills</p><p>I held her hand the tighter –</p><p>Which shortened all the miles –</p><p>And still her hum</p><p>The years among,</p><p>Deceives the Butterfly;</p><p>Still in her Eye</p><p>The Violets lie</p><p>Mouldered this many May.</p><p>I spilt the dew –</p><p>But took the morn – I chose this single star</p><p>From out the wide night’s numbers –</p><p>Sue – forevermore!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;一首美丽的情诗，出自艾米莉·狄金森，致苏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;One-Sister-have-I-in-our-house&quot;&gt;&lt;a href=&quot;#One-Sister-have-I-in-our-house&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>独白</title>
    <link href="https://gy5461.github.io/2022/05/08/%E7%8B%AC%E7%99%BD/"/>
    <id>https://gy5461.github.io/2022/05/08/%E7%8B%AC%E7%99%BD/</id>
    <published>2022-05-08T09:13:44.915Z</published>
    <updated>2022-05-08T09:16:08.148Z</updated>
    
    <content type="html"><![CDATA[<p>席慕容在他的散文《独白》里这样说：</p><p>在一回首间，才忽然发现，原来我一生的种种努力，不过是为了周遭的人对我满意而已，为了博得他人的称许和微笑，我战战兢兢地将自己套入所有的模式所有的桎梏，走到途中才发现，我只剩下一副模糊的面目，和一条不能回头的路。</p><p>诸君共勉</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;席慕容在他的散文《独白》里这样说：&lt;/p&gt;
&lt;p&gt;在一回首间，才忽然发现，原来我一生的种种努力，不过是为了周遭的人对我满意而已，为了博得他人的称许和微笑，我战战兢兢地将自己套入所有的模式所有的桎梏，走到途中才发现，我只剩下一副模糊的面目，和一条不能回头的路。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>二到三十六进制转换</title>
    <link href="https://gy5461.github.io/2022/05/08/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    <id>https://gy5461.github.io/2022/05/08/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</id>
    <published>2022-05-08T04:54:27.830Z</published>
    <updated>2022-05-08T09:04:54.559Z</updated>
    
    <content type="html"><![CDATA[<p>将x进制数字a转换为十进制数字b，再将b转换为目标y进制数c。从而实现任意进制数字间的转换</p><h2 id="二到三十六进制转换"><a href="#二到三十六进制转换" class="headerlink" title="二到三十六进制转换"></a>二到三十六进制转换</h2><h3 id="使用到64位整数，用ll表示long-long便于使用"><a href="#使用到64位整数，用ll表示long-long便于使用" class="headerlink" title="使用到64位整数，用ll表示long long便于使用"></a>使用到64位整数，用ll表示long long便于使用</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br></pre></td></tr></table></figure><h3 id="将d进制数字n转换为十进制数字res"><a href="#将d进制数字n转换为十进制数字res" class="headerlink" title="将d进制数字n转换为十进制数字res"></a>将d进制数字n转换为十进制数字res</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">d_to_ten</span><span class="params">(string n, <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>, tmp = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n.<span class="built_in">length</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> ch = n[i];</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isdigit</span>(ch))</span><br><span class="line">        &#123;</span><br><span class="line">            res += (ch - <span class="string">&#x27;0&#x27;</span>) * tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            res += (ch - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>) * tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp *= d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将十进制数n转换为目标d进制数res"><a href="#将十进制数n转换为目标d进制数res" class="headerlink" title="将十进制数n转换为目标d进制数res"></a>将十进制数n转换为目标d进制数res</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">ten_to_d</span><span class="params">(ll n,<span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        res = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">if</span>(n % d &lt; <span class="number">10</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            c = n % d + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            c = (n % d - <span class="number">10</span>) + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res = c + res;</span><br><span class="line">        n /= d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="转换示例"><a href="#转换示例" class="headerlink" title="转换示例"></a>转换示例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n;       <span class="comment">//d进制数n</span></span><br><span class="line">    <span class="type">int</span> d;      <span class="comment">//进制2～36</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> td;     <span class="comment">//目标进制</span></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; d &gt;&gt; td;</span><br><span class="line"></span><br><span class="line">    string ans; <span class="comment">//目标进制结果</span></span><br><span class="line"></span><br><span class="line">    ll tenN = <span class="built_in">d_to_ten</span>(n, d);</span><br><span class="line">    ans = <span class="built_in">ten_to_d</span>(tenN, td);</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;将x进制数字a转换为十进制数字b，再将b转换为目标y进制数c。从而实现任意进制数字间的转换&lt;/p&gt;
&lt;h2 id=&quot;二到三十六进制转换&quot;&gt;&lt;a href=&quot;#二到三十六进制转换&quot; class=&quot;headerlink&quot; title=&quot;二到三十六进制转换&quot;&gt;&lt;/a&gt;二到三十六进</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://gy5461.github.io/2022/05/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://gy5461.github.io/2022/05/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-05-08T04:54:27.830Z</published>
    <updated>2022-05-08T09:03:56.712Z</updated>
    
    <content type="html"><![CDATA[<p>第一篇博客写点简单的</p><h2 id="计算最大公约数-gcd"><a href="#计算最大公约数-gcd" class="headerlink" title="计算最大公约数(gcd)"></a>计算最大公约数(gcd)</h2><h3 id="递归函数计算"><a href="#递归函数计算" class="headerlink" title="递归函数计算"></a>递归函数计算</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b, a % b) : a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一篇博客写点简单的&lt;/p&gt;
&lt;h2 id=&quot;计算最大公约数-gcd&quot;&gt;&lt;a href=&quot;#计算最大公约数-gcd&quot; class=&quot;headerlink&quot; title=&quot;计算最大公约数(gcd)&quot;&gt;&lt;/a&gt;计算最大公约数(gcd)&lt;/h2&gt;&lt;h3 id=&quot;递归函数计算&quot;&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
